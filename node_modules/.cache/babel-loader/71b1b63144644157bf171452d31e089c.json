{"ast":null,"code":"var _jsxFileName = \"/Users/paris/Desktop/React-3D-Course/src/App.js\";\nimport * as THREE from \"three\";\nimport React, { useState, useRef, useEffect, Suspense } from \"react\";\nimport { OrbitControls } from \"drei\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport \"./App.css\";\nlet frontRightLatch; // let rearRightLatch\n// let frontLeftLatch\n// let rearLeftLatch \n\nfunction Tesla() {\n  const ref = useRef();\n  const gltf = useLoader(GLTFLoader, \"/tesla-w-animations.gltf\");\n  gltf.scene.scale.set(0.005, 0.005, 0.005);\n  let mixer;\n\n  if (model.animations.length) {\n    mixer = new THREE.AnimationMixer(model.scene);\n    model.animations.forEach(clip => {\n      const action = mixer.clipAction(clip);\n      action.play();\n    });\n  }\n\n  useFrame((state, delta) => {\n    mixer.update(delta);\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: gltf.scene,\n    position: [0, 0, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction Scene() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    intensity: 0.6,\n    position: [0, 10, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tesla, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(OrbitControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    Promise.all([fetch('http://sla.canbushack.com/db_get/259'), // Right Side\n    fetch('http://sla.canbushack.com/db_get/258/') // Right Side\n    ]).then(function (responses) {\n      return Promise.all(responses.map(function (response) {\n        return response.json();\n      }));\n    }).then(data => {\n      setData(data);\n      frontRightLatch = data[0]['VCRIGHT_frontLatchStatus']['enumerated_value']; // rearRightLatch = data[0]['VCRIGHT_rearLatchStatus']['enumerated_value']\n      // frontLeftLatch = data[1]['VCLEFT_frontLatchStatus']['enumerated_value']\n      // rearLeftLatch = data[1]['VCLEFT_rearLatchStatus']['enumerated_value']\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {});\n  }, []);\n  if (loading) return \"Application Starting...\";\n  if (error) return \"Error!\";\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Canvas, {\n    camera: {\n      position: [-5.10923594025578253, 2.3585518996952866, -5.686206208293889],\n      near: 0.5,\n      far: 2000,\n      fov: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Scene, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/paris/Desktop/React-3D-Course/src/App.js"],"names":["THREE","React","useState","useRef","useEffect","Suspense","OrbitControls","GLTFLoader","Canvas","useFrame","useLoader","frontRightLatch","Tesla","ref","gltf","scene","scale","set","mixer","model","animations","length","AnimationMixer","forEach","clip","action","clipAction","play","state","delta","update","Scene","App","data","setData","loading","setLoading","error","setError","Promise","all","fetch","then","responses","map","response","json","catch","console","finally","position","near","far","fov"],"mappings":"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","sourcesContent":["import * as THREE from \"three\";\nimport React, { useState, useRef, useEffect, Suspense } from \"react\";\nimport { OrbitControls } from \"drei\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport \"./App.css\";\n\nlet frontRightLatch\n// let rearRightLatch\n// let frontLeftLatch\n// let rearLeftLatch \n\nfunction Tesla() {\n  const ref = useRef();\n  const gltf = useLoader(GLTFLoader, \"/tesla-w-animations.gltf\");\n  gltf.scene.scale.set(0.005, 0.005, 0.005)\n  \n  let mixer\n    if (model.animations.length) {\n        mixer = new THREE.AnimationMixer(model.scene);\n        model.animations.forEach(clip => {\n            const action = mixer.clipAction(clip)\n            action.play();\n        });\n    }\n\n    useFrame((state, delta) => {\n        mixer.update(delta)\n    })\n\n  return <primitive object={gltf.scene} position={[0, 0, 0]} />;\n}\n\n\nfunction Scene() {\n  return (\n    <>\n      <ambientLight />\n      <pointLight intensity={0.6} position={[0, 10, 4]} />\n      <Suspense fallback={null}>\n      \n        <Tesla />\n      </Suspense>\n      <OrbitControls />\n\n      \n    </>\n  );\n}\n\nfunction App() {\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    Promise.all([\n      fetch('http://sla.canbushack.com/db_get/259'), // Right Side\n      fetch('http://sla.canbushack.com/db_get/258/') // Right Side\n  ]).then(function (responses) {\n      return Promise.all(responses.map(function (response) {\n          return response.json();\n          \n      }));\n      \n}) \n\n  .then (data => {\n  setData(data);\n  \n    frontRightLatch = data[0]['VCRIGHT_frontLatchStatus']['enumerated_value']\n    // rearRightLatch = data[0]['VCRIGHT_rearLatchStatus']['enumerated_value']\n    // frontLeftLatch = data[1]['VCLEFT_frontLatchStatus']['enumerated_value']\n    // rearLeftLatch = data[1]['VCLEFT_rearLatchStatus']['enumerated_value']\n  })\n\n  .catch((error) => {\n  console.error(\"Error fetching data: \", error);\n  setError(error);\n  })\n  .finally(() => {\n    \n  });\n  }, []);\n  \n  if (loading) return \"Application Starting...\";\n  if (error) return \"Error!\";\n\n  return (\n    <>\n      <Canvas\n        camera={{\n          position: [-5.10923594025578253, 2.3585518996952866, -5.686206208293889],\n          near: 0.5,\n          far: 2000,\n          fov: 25,\n          \n         \n        }}\n      >\n        <Scene />\n      </Canvas>\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}