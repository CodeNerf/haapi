{"ast":null,"code":"var _jsxFileName = \"/Users/paris/Desktop/React-3D-Course/src/App.js\";\nimport * as THREE from \"three\";\nimport React, { useState, useRef, useEffect, Suspense } from \"react\";\nimport { OrbitControls } from \"drei\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport \"./App.css\";\nlet part4;\n\nfunction Tesla() {\n  const ref = useRef();\n  const gltf = useLoader(GLTFLoader, \"/tesla-w-animations.gltf\");\n  gltf.scene.scale.set(0.005, 0.005, 0.005);\n  let animations;\n  let mixer; // let [part1, part2, part3, part5, part6, part7, part8, part9, part10]\n\n  let part4;\n\n  if (gltf.animations.length) {\n    mixer = new THREE.AnimationMixer(gltf.scene);\n    animations = gltf.animations;\n    console.log(animations); // gltf.animations.forEach(clip => {\n    //     const action = mixer.clipAction(clip)\n    //     action.play();\n    // console.log(action)\n    // });\n\n    const clipA = animations[4];\n    part4 = mixer.clipAction(clipA);\n\n    if (frontRightLatch === \"LATCH_OPENED\") {\n      part4.paused = false;\n      part4.timeScale = 1;\n      part4.setLoop(THREE.LoopOnce);\n      part4.clampWhenFinished = true;\n      part4.play();\n    }\n  }\n\n  useFrame((state, delta) => {\n    mixer.update(delta);\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: gltf.scene,\n    position: [0, 0, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction Scene() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    intensity: 0.6,\n    position: [0, 10, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tesla, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(OrbitControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"http://sla.canbushack.com/v1/signals/APB_watchdogState\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(data => {\n      setData(data); // console.log(data)\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return \"Application Starting...\";\n  if (error) return \"Error!\";\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Canvas, {\n    camera: {\n      position: [-5.10923594025578253, 2.3585518996952866, -5.686206208293889],\n      near: 0.5,\n      far: 2000,\n      fov: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Scene, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/paris/Desktop/React-3D-Course/src/App.js"],"names":["THREE","React","useState","useRef","useEffect","Suspense","OrbitControls","GLTFLoader","Canvas","useFrame","useLoader","part4","Tesla","ref","gltf","scene","scale","set","animations","mixer","length","AnimationMixer","console","log","clipA","clipAction","frontRightLatch","paused","timeScale","setLoop","LoopOnce","clampWhenFinished","play","state","delta","update","Scene","App","data","setData","loading","setLoading","error","setError","fetch","then","response","ok","json","catch","finally","position","near","far","fov"],"mappings":"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","sourcesContent":["import * as THREE from \"three\";\nimport React, { useState, useRef, useEffect, Suspense } from \"react\";\nimport { OrbitControls } from \"drei\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport \"./App.css\";\nlet part4\n\nfunction Tesla() {\n  const ref = useRef();\n  const gltf = useLoader(GLTFLoader, \"/tesla-w-animations.gltf\");\n  gltf.scene.scale.set(0.005, 0.005, 0.005)\n  \n  let animations\n  let mixer\n  // let [part1, part2, part3, part5, part6, part7, part8, part9, part10]\n  let part4\n\n  if (gltf.animations.length) {\n      mixer = new THREE.AnimationMixer(gltf.scene);\n      animations = gltf.animations\n      console.log(animations)\n      // gltf.animations.forEach(clip => {\n      //     const action = mixer.clipAction(clip)\n      //     action.play();\n          // console.log(action)\n      // });\n\n      const clipA = animations [ 4 ]\n      part4 = mixer.clipAction(clipA)\n      if(frontRightLatch === \"LATCH_OPENED\"){\n\n        part4.paused = false;\n        part4.timeScale = 1;\n\n        part4.setLoop(THREE.LoopOnce );\n        part4.clampWhenFinished = true;\n        part4.play()\n      }\n\n\n  }\n\n  useFrame((state, delta) => { mixer.update(delta) })\n\n  return <primitive object={gltf.scene} position={[0, 0, 0]} />;\n}\n\n\nfunction Scene() {\n  return (\n    <>\n      <ambientLight />\n      <pointLight intensity={0.6} position={[0, 10, 4]} />\n      <Suspense fallback={null}>\n      \n        <Tesla />\n      </Suspense>\n      <OrbitControls />\n\n      \n    </>\n  );\n}\n\nfunction App() {\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n  fetch(\"http://sla.canbushack.com/v1/signals/APB_watchdogState\")\n  .then((response) => {\n  if (response.ok) {\n  return response.json();\n  }\n  throw response;\n\n})\n\n  .then (data => {\n  setData(data);\n    // console.log(data)\n  })\n\n\n  .catch((error) => {\n  console.error(\"Error fetching data: \", error);\n  setError(error);\n  })\n  .finally(() => {\n  setLoading(false);\n  });\n  }, []);\n  if (loading) return \"Application Starting...\";\n  if (error) return \"Error!\";\n  \n  return (\n    <>\n      <Canvas\n        camera={{\n          position: [-5.10923594025578253, 2.3585518996952866, -5.686206208293889],\n          near: 0.5,\n          far: 2000,\n          fov: 25,\n          \n         \n        }}\n      >\n        <Scene />\n      </Canvas>\n\n     \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}