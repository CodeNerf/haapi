{"ast":null,"code":"var _jsxFileName = \"/Users/paris/Desktop/React-3D-Course/src/App.js\";\nimport * as THREE from \"three\";\nimport React, { useState, useRef, useEffect, Suspense } from \"react\";\nimport { OrbitControls } from \"drei\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport \"./App.css\"; // https://sketchfab.com/3d-models/indoorflower-241421729f38400cad10e6905bbb0de5\n\nfunction Plant() {\n  const ref = useRef();\n  const gltf = useLoader(GLTFLoader, \"/scene.gltf\");\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: gltf.scene,\n    position: [0, 0, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction Scene() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    intensity: 0.6,\n    position: [0, 10, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Plant, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(OrbitControls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"https://randomuser.me/api\").then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Canvas, {\n    camera: {\n      position: [0, 0, 15],\n      near: 1,\n      far: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Scene, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: data.results[0].picture.medium,\n    alt: \"random user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }\n  }, JSON.stringify(data, null, 2)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/paris/Desktop/React-3D-Course/src/App.js"],"names":["THREE","React","useState","useRef","useEffect","Suspense","OrbitControls","GLTFLoader","Canvas","useFrame","useLoader","Plant","ref","gltf","scene","Scene","App","data","setData","loading","setLoading","error","setError","fetch","then","response","ok","json","catch","console","finally","position","near","far","results","picture","medium","JSON","stringify"],"mappings":"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","sourcesContent":["import * as THREE from \"three\";\nimport React, { useState, useRef, useEffect, Suspense } from \"react\";\nimport { OrbitControls } from \"drei\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { Canvas, useFrame, useLoader } from \"react-three-fiber\";\nimport \"./App.css\";\n\n// https://sketchfab.com/3d-models/indoorflower-241421729f38400cad10e6905bbb0de5\nfunction Plant() {\n  const ref = useRef();\n  const gltf = useLoader(GLTFLoader, \"/scene.gltf\");\n  return <primitive object={gltf.scene} position={[0, 0, 0]} />;\n}\n\n\nfunction Scene() {\n  return (\n    <>\n      <ambientLight />\n      <pointLight intensity={0.6} position={[0, 10, 4]} />\n      <Suspense fallback={null}>\n        <Plant />\n      </Suspense>\n      <OrbitControls />\n    </>\n  );\n}\n\nfunction App() {\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n  fetch(\"https://randomuser.me/api\")\n  .then((response) => {\n  if (response.ok) {\n  return response.json();\n  }\n  throw response;\n  })\n  .catch((error) => {\n  console.error(\"Error fetching data: \", error);\n  setError(error);\n  })\n  .finally(() => {\n  setLoading(false);\n  });\n  }, []);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error!\";\n\n  return (\n    <>\n      <Canvas\n        camera={{\n          position: [0, 0, 15],\n          near: 1,\n          far: 40,\n        }}\n      >\n        <Scene />\n      </Canvas>\n\n      <img src={data.results[0].picture.medium} alt=\"random user\" />\n<pre>{JSON.stringify(data, null, 2)}</pre>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}